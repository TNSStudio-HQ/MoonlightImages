{
  "Name": "Code Server",
  "Author": "Jesper Richert",
  "UpdateUrl": null,
  "DonateUrl": "https:ko-fi.com/tnsjesper",
  "StartupCommand": "sh .local/lib/code-server-{{VERSION}}/bin/code-server",
  "OnlineDetection": "HTTP server listening on",
  "StopCommand": "^C",
  "InstallShell": "/bin/bash",
  "InstallDockerImage": "debian:latest",
  "InstallScript": "apt update\r\napt install -y curl jq\r\n\r\n\r\nARCH=$([[ \"$(uname -m)\" == \"x86_64\" ]] && echo \"amd64\" || echo \"arm64\")\r\nMATCH=linux-${ARCH}\r\n# Create initial directories\r\nmkdir -p /mnt/server\r\ncd /mnt/server\r\n\r\necho ${ARCH}\r\necho ${MATCH}\r\n# Create needed directories\r\nmkdir -p /mnt/server/.local/lib /mnt/server/.local/bin /mnt/server/.config/code-server /mnt/server/projects\r\n\r\n# Change permission of projects directory so it can be accessed by code-server\r\nchmod 777 /mnt/server/projects\r\ntouch \"/mnt/server/projects/PLACE YOUR PROJECTS HERE\"\r\n\r\n# Check for available versions. Defaults to latest if no valid version is found.\r\nLATEST_JSON=$(curl --silent \"https://api.github.com/repos/coder/code-server/releases/latest\")\r\nRELEASES=$(curl --silent \"https://api.github.com/repos/coder/code-server/releases\")\r\n\r\nif [ -z \"${VERSION}\" ] || [ \"${VERSION}\" == \"latest\" ]; then\r\n    DOWNLOAD_URL=$(echo ${LATEST_JSON} | jq .assets | jq -r .[].browser_download_url | grep -i ${MATCH})\r\nelse\r\n    VERSION_CHECK=$(echo ${RELEASES} | jq -r --arg VERSION \"v${VERSION}\" '.[] | select(.tag_name==$VERSION) | .tag_name')\r\n    if [ \"v${VERSION}\" == \"${VERSION_CHECK}\" ]; then\r\n        DOWNLOAD_URL=$(echo ${RELEASES} | jq -r --arg VERSION \"v${VERSION}\" '.[] | select(.tag_name==$VERSION) | .assets[].browser_download_url' | grep -i ${MATCH})\r\n    else\r\n        echo -e \"defaulting to latest release\"\r\n        DOWNLOAD_URL=$(echo ${LATEST_JSON} | jq .assets | jq -r .[].browser_download_url)\r\n    fi\r\nfi\r\n\r\n# Download the given Version and extract it\r\necho \"Downloading $DOWNLOAD_URL\"\r\ncurl -fL $DOWNLOAD_URL | tar -C /mnt/server/.local/lib -xz\r\nmv /mnt/server/.local/lib/code-server-*linux-${ARCH} /mnt/server/.local/lib/code-server-${VERSION}\r\n\r\n\r\nPATH=\"/mnt/server/.local/bin:$PATH\"\r\necho \"password: changeme\r\nbind-addr: 0.0.0.0\r\nauth: password\r\ncert: false\" > /mnt/server/.config/code-server/config.yaml\r\n\r\necho \"Install complete\"",
  "ParseConfiguration": "[{\"Type\":\"file\",\"File\":\".config/code-server/config.yaml\",\"Configuration\":{\"password\":\"{{PASSWORD}}\",\"bind-addr\":\"0.0.0.0:{{SERVER_PORT}}\"}}]",
  "AllocationsNeeded": 1,
  "Variables": [
    {
      "Key": "PASSWORD",
      "DefaultValue": "changeme",
      "DisplayName": "Password",
      "Description": "The Passwort to auth",
      "AllowView": true,
      "AllowEdit": true,
      "Filter": null
    },
    {
      "Key": "VERSION",
      "DefaultValue": "latest",
      "DisplayName": "Version",
      "Description": "The Version of the Code Server",
      "AllowView": true,
      "AllowEdit": true,
      "Filter": null
    }
  ],
  "DefaultDockerImage": 0,
  "AllowDockerImageChange": false,
  "DockerImages": [
    {
      "DisplayName": "NodeJS 18",
      "Name": "ghcr.io/tnsstudio-hq/moonlightdockerimages:nodejs18",
      "AutoPull": true
    }
  ]
}